package greedyAlgorithm;

import java.util.ArrayList;
import java.util.List;

/*Given a weighted, undirected and connected graph. The task is to find the sum of weights of the edges of the Minimum Spanning Tree.
 * 
 * 
 */
public class MinimumSpanningTree {
	static class Edge{
		int src;
		int dest;
		int weight;
	}
	public static int find(Integer[] parent,int i){
		if(parent[i]==-1)
			return i;
		return find(parent,parent[i]);
	}
	public static void findMinimumweightspanningtree(List<Edge> list){
		
	}
	public static void main(String[] args) {
		int v=3;
		int e=3;
		int arr[]={1,2,5,2,3,3,1,3,1};
		List<Edge> list=new ArrayList<>();
		int j=0;
		for(int i=0;i<e;i++){
			int count=i;
			while(j<arr.length && count==i){
				Edge edge=new Edge();
				edge.src=arr[j];
				edge.dest=arr[++j];
				edge.weight=arr[++j];
				count++;
				list.add(edge);
			}
		}
		findMinimumweightspanningtree(list);
	}

}
