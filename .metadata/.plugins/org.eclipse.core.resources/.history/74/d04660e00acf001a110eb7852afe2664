package greedyAlgorithm;

public class DijkstraPractice {

	public static void main(String[] args) {
		int[][] graph={{0,1,43},{1,0,6},{43,6,0}};
		int sourceVertex=0;
		int vertex=3;
		Dijkstra(graph,sourceVertex,vertex);

	}
	public static int findMinimum(int[] dist,boolean[] mst,int v){
		int minIndex=0;
		int min=Integer.MAX_VALUE;
		for(int i=0;i<v;i++){
			if(!mst[i] && dist[i] < min){
				min=dist[i];
				minIndex=i;
			}
		}
		
	}
	public static void Dijkstra(int[][] graph,int s,int v){
		int[] dist=new int[v];
		boolean[] mst=new boolean[v];
		for(int i=0;i<v;i++){
			dist[i]=Integer.MAX_VALUE;
			mst[i]=false;
		}
		dist[0]=0;
		for(int count=0;count<v;count++){
			int u=findMinimum(dist,mst,v);
		}
	}
}
