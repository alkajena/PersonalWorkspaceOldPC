package dynamicProgramming;

public class MaximumSumIncreasingSubsequence {

	public static void main(String[] args) {
		Integer A[] = { 2, 5, 3, 7, 11, 8, 10, 13, 6 }; 
        int n = A.length;
        MaximumSumDP(A,n);
	}

	public static void MaximumSumDP(Integer[] arr,int n){
		
		Integer[] lis=new Integer[n+1];
		Integer[] sum=new Integer[n+1];
		for(int i=0;i<n;i++){
			lis[i]=1;
			sum[i]=1;
		}
		for(int i=1;i<n;i++){
			for(int j=0;j<i;j++){
				if((arr[i] > arr[j]) && (lis[i] < (1+lis[j]))){
					lis[i]=1+lis[j];
					sum[i]=arr[i]+arr[j];
				}
			}
		}
	}
	
}
